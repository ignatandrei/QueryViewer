@page "/databases/{database}/tables/{table}"
@inherits LayoutComponentBase
@inject WebAPIInteraction interaction
<h3>@table</h3> 
@if (columns == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <ExampleBlazor.Pages.Generated.Order_Details_Extended_page 
    database="@database" table="@table"
    totalRecords="@nrRecords"></ExampleBlazor.Pages.Generated.Order_Details_Extended_page>
}


@code {
    [Parameter]
    public string? database { get; set; } = null;

    [Parameter]
    public string? table { get; set; } = null;

    public long? nrRecords { get; set; } = null;
    [Inject(Key = "db")]
    public HttpClient? HttpClient_WebApi { get; set; } = null;


    FluentGrid? myGrid;

    public IQueryable<MetaColumn>? columns = null;
    
    protected override async Task OnInitializedAsync()
    {
        ArgumentNullException.ThrowIfNull(HttpClient_WebApi);
        ArgumentNullException.ThrowIfNull(database);
        ArgumentNullException.ThrowIfNull(table);
        nrRecords = await interaction.GetTableCount(database,table);

        var data = await HttpClient_WebApi.GetFromJsonAsync<MetaColumn[]>($"api/MetaData/Columns/{database}/{table}");
        if (data != null) 
        {
            columns = data.AsQueryable();
        }
    }
}
