@using DataBreadcumb = (string title, string fullUrl, Icon icon);
@inject NavigationManager navigationManager


<FluentBreadcrumb>    
    @for(int it=0;it<splitUrl.Count;it++)
    {
        var i = it;
        var data= splitUrl[i];
        
        <FluentBreadcrumbItem Href="@splitUrl[i].fullUrl">
            <FluentIcon Value="@splitUrl[i].icon" Color="@Color.Neutral" Slot="start" />
            @splitUrl[i].title
        </FluentBreadcrumbItem>
        
    }
    

</FluentBreadcrumb>


@code {
    Icon iconDefault = new Icons.Regular.Size16.PresenceUnknown();
    List<DataBreadcumb> splitUrl = new() { ("Home", "/", new Icons.Regular.Size16.Home()) };
    string url = "";
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(100);
        url= navigationManager.ToBaseRelativePath(navigationManager.Uri);
        Icon icon = new Icons.Regular.Size16.PresenceUnknown();
        foreach (var item in url.Split('/'))
        {
            Icon iconUrl = iconDefault;
            if (item != "")
            {
                switch (url.Length+1)
                {
                    case 1:
                        icon = new Icons.Regular.Size16.DatabaseStack();
                        break;
                    case 2:
                        icon = new Icons.Regular.Size16.Database();
                        break;
                    case 3:
                        icon = new Icons.Regular.Size16.Table();
                        break;
                    case 4:
                        icon = new Icons.Regular.Size16.TableEdit();
                        break;
                    default:
                        break;
                }
                splitUrl.Add((item, splitUrl.Last().fullUrl + item + "/",icon));
            }
        }
        
        


        
    }
}
